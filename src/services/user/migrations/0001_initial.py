# Generated by Django 5.0 on 2023-12-22 22:57

import services.user.models.user_manager
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(db_column='id', default=uuid.uuid4, primary_key=True, serialize=False)),
                ('dni', models.CharField(blank=True, db_column='dni', max_length=8, null=True, unique=True)),
                ('full_name', models.CharField(blank=True, db_column='full_name', max_length=100, null=True, unique=True)),
                ('email', models.EmailField(db_column='email', max_length=100, unique=True)),
                ('phone_number', models.CharField(blank=True, db_column='phone_number', max_length=16, null=True, unique=True)),
                ('password', models.CharField(db_column='password', max_length=128)),
                ('is_staff', models.BooleanField(db_column='is_staff', default=False, serialize=False)),
                ('is_superuser', models.BooleanField(db_column='is_superuser', default=False, serialize=False)),
                ('is_active', models.BooleanField(db_column='is_active', default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='date_joined', serialize=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'db_table': 'user',
            },
            managers=[
                ('objects', services.user.models.user_manager.UserCustomManager()),
            ],
        ),
    ]
